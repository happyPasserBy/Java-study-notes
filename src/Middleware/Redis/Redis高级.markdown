# Redis高阶

## 1.Redis的数据类型
### 1.1 redisObject结构
> Redis的五大数据类型也称五大数据对象,Redis并没有直接使用这些结构来实现键值对数据库，而是使用这些结构构建了一个对象系统redisObject；这个对象系统包含了五大数据对象，字符串对象（string）、列表对象（list）、哈希对象（hash）、集合（set）对象和有序集合对象（zset）；而这五大对象的底层数据编码可以用命令OBJECT ENCODING来进行查看。
```c
typedef struct redisObject{
     //类型
     unsigned type:4;
     //编码
     unsigned encoding:4;
     //指向底层数据结构的指针
     void *ptr;
     //引用计数
     int refcount;
     //记录最后一次被程序访问的时间
     unsigned lru:22;
 
}robj
```
![](https://img2018.cnblogs.com/blog/1432634/201907/1432634-20190725142541285-2111600312.png)
### 1.1 String
> 字符串，最基本的数据类型，底层采用SDS来存储。SDS获取长度是O(n)的时间复杂度，redis在修改字符串时会对SDS自动扩容，防止了数据溢出，在修改时采用预分配内存和惰性释放空间的方式减少SDS内存的分配次数
### 1.2 Hash
> String作为key组成的hash表。底层使用ahsh表或压缩表作为数据结构。当发生hash冲突时使用拉链法解决冲突。
#### 1.2.1 编码转换规则 
> 当同时满足下面两个条件时，使用ziplist（压缩列表）编码：
* 列表保存元素个数小于512个
* 每个元素长度小于64字节
### 1.3 List
> 列表，按照String元素插入的顺序排序。redis底层采用双端链表和压缩列表来实现，双向链表记录了头尾指针与长度，压缩列表不在赘述。
#### 1.3.1 编码转换规则 
> 当同时满足下面两个条件时，使用ziplist（压缩列表）编码：
* 列表保存元素个数小于512个
* 每个元素长度小于64字节
### 1.4 Set
> String元素组成的无序集合，不允许重复
#### 1.4.1 编码转换规则
> 当有序集合对象同时满足以下两个条件时，对象使用 ziplist 编码：
* 集合对象中所有元素都是整数
* 列表保存元素个数小于512个
### 1.5 Sorted Set
> 与Set相似，但可以为集合中的元素进行排序，集合中每个元素拥有一个分数，通过分数为每个元素排序，
集合中的每个元素不可以重复，但是分数可以重复。底层采用跳跃表与压缩表实现。
#### 1.5.1 编码转换规则
> 当有序集合对象同时满足以下两个条件时，对象使用 ziplist 编码：
* 保存的元素数量小于128个
* 保存的所有元素长度都小于64字节

## 1.缓存与数据库如何保持一致性？
 


## 参考
1. https://juejin.im/post/5d7c7a14f265da03f47c4f93#heading-2
2. (底层数据结构)[https://www.cnblogs.com/MouseDong/p/11134039.html]
3. https://www.cnblogs.com/ysocean/p/9102811.html#_label1